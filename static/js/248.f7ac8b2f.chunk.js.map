{"version":3,"file":"static/js/248.f7ac8b2f.chunk.js","mappings":"mNAAaA,EAAc,SAACC,GAAD,OAAWA,EAAMC,OAAOC,KAAxB,ECC3B,EAA0B,2BAA1B,EAA6D,yBAA7D,EAA6F,wBAA7F,EAA6H,yBAA7H,EAA4J,uBAA5J,EAA4L,+C,SCE/KC,EAAY,SAAC,GAOnB,IANLC,EAMI,EANJA,GACAC,EAKI,EALJA,KACAC,EAII,EAJJA,OACAL,EAGI,EAHJA,OACAM,EAEI,EAFJA,UACAC,EACI,EADJA,YAEMC,GAAWC,EAAAA,EAAAA,MAYjB,OACE,iBAAKC,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAWC,IAAKP,EAAQQ,IAAKT,KAE7C,iBAAKM,UAAWC,EAAhB,WACE,eAAGD,UAAWC,EAAd,UAA0BX,EAAOc,eAAe,SAAhD,cACA,eAAGJ,UAAWC,EAAd,UACGL,EAAUQ,eAAe,SAD5B,oBAKF,mBACEJ,UAAWH,EAAcI,EAAaA,EACtCI,KAAK,SACLC,QAxBe,WACnBR,GACES,EAAAA,EAAAA,GACEV,EACI,CAAEJ,GAAAA,EAAIG,UAAWA,EAAY,EAAGC,aAAa,GAC7C,CAAEJ,GAAAA,EAAIG,UAAWA,EAAY,EAAGC,aAAa,IAGtD,EAaG,SAKGA,EAAc,YAAc,aAIpC,EC1CD,EAAuB,yBAAvB,EAAuD,yBAAvD,EAAsF,wB,SCUzEW,EAAa,WACxB,IAAMlB,GAASmB,EAAAA,EAAAA,IAAYrB,GAC3B,GAAwBsB,EAAAA,EAAAA,UAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAgBvB,EAAOwB,MAAM,EANd,EAMiBH,GAChCI,EAPe,EAOEJ,GAAyBrB,EAAO0B,OAKvD,OACE,iCACE,eAAIhB,UAAWC,EAAf,SACGY,EAAcI,KAAI,gBAAGxB,EAAH,EAAGA,GAAOyB,GAAV,mBACjB,eAAIlB,UAAWC,EAAf,UACE,SAACT,GAAD,QAAWC,GAAIA,GAAQyB,KADKzB,EADb,MAMpBsB,EAAiB,MAChB,oBAAQf,UAAWC,EAASI,KAAK,SAASC,QAbzB,WACrBM,GAAQ,SAACO,GAAD,OAAeA,EAAY,CAA3B,GACT,EAWK,uBAEE,SAAC,MAAD,SAKT,E,iBCrCD,EAAuB,wBCIVC,EAAe,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SACjC,OACE,UAAC,KAAD,CAAMtB,UAAWC,EAAUoB,GAAIA,EAA/B,WACE,SAAC,MAAD,IACCC,IAGN,ECOD,EAbe,WACb,IAAMxB,GAAWC,EAAAA,EAAAA,MAIjB,OAHAwB,EAAAA,EAAAA,YAAU,WACRzB,GAAS0B,EAAAA,EAAAA,KACV,GAAE,CAAC1B,KAEF,6BACE,SAACsB,EAAD,CAAcC,GAAG,IAAjB,gCACA,SAACb,EAAD,MAGL,C","sources":["redux/tweets/selectors.js","webpack://tweets/./src/components/TweetCard/TweetCard.module.css?b888","components/TweetCard/TweetCard.jsx","webpack://tweets/./src/components/TweetsList/TweetsList.module.css?2ae8","components/TweetsList/TweetsList.jsx","webpack://tweets/./src/components/GoBackBtn/GoBackBtn.module.css?e4ec","components/GoBackBtn/GoBackBtn.jsx","pages/Tweets.jsx"],"sourcesContent":["export const selectUsers = (state) => state.tweets.users;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"TweetCard_wrapper__uEvo0\",\"image\":\"TweetCard_image__FwYDE\",\"info\":\"TweetCard_info__O1FYI\",\"stats\":\"TweetCard_stats__PKEcP\",\"btn\":\"TweetCard_btn__8oMm-\",\"active\":\"TweetCard_active__QXCJ3 TweetCard_btn__8oMm-\"};","import { useDispatch } from \"react-redux\";\nimport { followUser } from \"../../redux/tweets/operations\";\nimport css from \"./TweetCard.module.css\";\nexport const TweetCard = ({\n  id,\n  user,\n  avatar,\n  tweets,\n  followers,\n  isFollowing,\n}) => {\n  const dispatch = useDispatch();\n\n  const handleFollow = () => {\n    dispatch(\n      followUser(\n        isFollowing\n          ? { id, followers: followers - 1, isFollowing: false }\n          : { id, followers: followers + 1, isFollowing: true }\n      )\n    );\n  };\n\n  return (\n    <div className={css.wrapper}>\n      <img className={css.image} src={avatar} alt={user} />\n\n      <div className={css.info}>\n        <p className={css.stats}>{tweets.toLocaleString(\"en-US\")} Tweets</p>\n        <p className={css.stats}>\n          {followers.toLocaleString(\"en-US\")} Followers\n        </p>\n      </div>\n\n      <button\n        className={isFollowing ? css.active : css.btn}\n        type=\"button\"\n        onClick={handleFollow}\n      >\n        {isFollowing ? \"Following\" : \"Follow\"}\n      </button>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"TweetsList_list__puywo\",\"item\":\"TweetsList_item__QvzDj\",\"btn\":\"TweetsList_btn__hq9B0\"};","import { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { FiDownload } from \"react-icons/fi\";\n\nimport { selectUsers } from \"../../redux/tweets/selectors\";\nimport { TweetCard } from \"../TweetCard/TweetCard\";\nimport css from \"./TweetsList.module.css\";\n\nconst ITEMS_PER_PAGE = 6;\n\nexport const TweetsList = () => {\n  const tweets = useSelector(selectUsers);\n  const [page, setPage] = useState(1);\n\n  const tweetsPerPage = tweets.slice(0, page * ITEMS_PER_PAGE);\n  const isButtonHidden = page * ITEMS_PER_PAGE >= tweets.length;\n\n  const handleLoadMore = () => {\n    setPage((prevState) => prevState + 1);\n  };\n  return (\n    <>\n      <ul className={css.list}>\n        {tweetsPerPage.map(({ id, ...restProps }) => (\n          <li className={css.item} key={id}>\n            <TweetCard id={id} {...restProps} />\n          </li>\n        ))}\n      </ul>\n      {isButtonHidden ? null : (\n        <button className={css.btn} type=\"button\" onClick={handleLoadMore}>\n          Load More\n          <FiDownload />\n        </button>\n      )}\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"GoBackBtn_link__QcSaa\"};","import { Link } from \"react-router-dom\";\nimport { BsArrowLeftSquareFill } from \"react-icons/bs\";\n\nimport css from \"./GoBackBtn.module.css\";\n\nexport const GoBackButton = ({ to, children }) => {\n  return (\n    <Link className={css.link} to={to}>\n      <BsArrowLeftSquareFill />\n      {children}\n    </Link>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchUsers } from \"../redux/tweets/operations\";\nimport { TweetsList } from \"../components/TweetsList/TweetsList\";\nimport { GoBackButton } from \"../components/GoBackBtn/GoBackBtn\";\n\nconst Tweets = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchUsers());\n  }, [dispatch]);\n  return (\n    <main>\n      <GoBackButton to=\"/\">Back to Home Page</GoBackButton>\n      <TweetsList />\n    </main>\n  );\n};\n\nexport default Tweets;\n"],"names":["selectUsers","state","tweets","users","TweetCard","id","user","avatar","followers","isFollowing","dispatch","useDispatch","className","css","src","alt","toLocaleString","type","onClick","followUser","TweetsList","useSelector","useState","page","setPage","tweetsPerPage","slice","isButtonHidden","length","map","restProps","prevState","GoBackButton","to","children","useEffect","fetchUsers"],"sourceRoot":""}